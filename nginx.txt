Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-08-04T14:56:34+08:00

====== nginx ======
Created 星期二 04 八月 2015

==== 注意事项 ====

* location匹配时‘/’需要精确匹配（/api/upload 与 [[/api/upload/的区别很大）。不匹配有可能引起nginx总是返回]] '301 move permanetly'
* 设置请求体大小： nginx.conf 里面http项，加option: client_max_body_size 15M;
* proxy_set_header X-Scheme $scheme; 使得nginx访问原域名
* default_type application/file; 设置content-type
* nginx proxy 默认超时时间1分钟，nginx.conf加入如下设置可以更改超时时间：
	proxy_connect_timeout       600;
	proxy_send_timeout          600;
	proxy_read_timeout          600;
	send_timeout                600;


* nodebb nginx socket.io 支持：
   # Socket.IO Support
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		
* 屏蔽某些特定的referer
	if ($http_referer ~ "spamdomain1\.com|spamdomain2\.com|spamdomain3\.com")  { 
  return 444;
}


* nginx生成auth_basic 用户名密码文件： htppasswd 文件 用户名

* nginx location语法


基本语法：location [=|~|~*|^~] /uri/ { … }


= 严格匹配。如果这个查询匹配，那么将停止搜索并立即处理此请求。
~ 为区分大小写匹配(可用正则表达式)
!~为区分大小写不匹配
~* 为不区分大小写匹配(可用正则表达式)
!~*为不区分大小写不匹配
^~ 如果把这个前缀用于一个常规字符串,那么告诉nginx 如果路径匹配那么不测试正则表达式。

示例
=====
location = / {
 # 只匹配 / 查询。
}
location / {
 # 匹配任何查询，因为所有请求都已 / 开头。但是正则表达式规则和长的块规则将被优先和查询匹配。
}
location ^~ /images/ {
 # 匹配任何已 /images/ 开头的任何查询并且停止搜索。任何正则表达式将不会被测试。
}
location ~*.(gif|jpg|jpeg)$ {
 # 匹配任何已 gif、jpg 或 jpeg 结尾的请求。
}
location ~*.(gif|jpg|swf)$ {
  valid_referers none blocked start.igrow.cn sta.igrow.cn;
  if ($invalid_referer) {
  #防盗链
  rewrite ^/ http://$host/logo.png;
  }
}
* proxy_pass_set Host www.baidu.com; 可以设置nginx代理时使用这个作为域名去访问
* 强制no-cache: 
	location / {
		add_header Cache-Control no-cache;
	}
* 以点开头的路径下的文件不能访问到, 如/.well-known/index.html 总是返回403; 多一个文件层级即可解决问题: [[/.well-known/somedir/index.html]]
* TLS 1.1 and TLS 1.2 are supported since nginx-1.0.12
* 在配置单页面应用时，如果使用历史模式，index.html应不允许cache。因为当有更新时，如果index.html被前端cache, 会导致引用不到最新的js和css, 整个网站得不到更新
	而且前端是以path为单位更新的，需要每个path都刷新，才能保证每个path都引用到最新的html. 不然直接通过输入path进入网站，还是会使用cache的html。
	 location @rewrites {
		rewrite ^(.+)$ /index.html break;
		expires -1;
		add_header Cache-Control no-store;
	  }

