Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-07-29T11:46:26+08:00

====== nodejs ======
Created 星期三 29 七月 2015

==== 定时任务 ====
* node-schedule 定时模块，可以支持linux crontab格式的定时任务，可以指定在某个时间点执行等等
* npm dedupe 删除项目里重复模块
* String.prototype.trim()
* npm search qrcode搜索项目
* async.forEachof 可以在循环函数里获取到数组index
* npm config ls -al查看npm配置
* registry = http://registry.npm.taobao.org .npmrc加入该内容可以设置npm源（淘宝镜像)
* npm dependency 前置符号含义：
	~1.2.3 := >=1.2.3 <1.(2+1).0 := >=1.2.3 <1.3.0
	~1.2 := >=1.2.0 <1.(2+1).0 := >=1.2.0 <1.3.0 (Same as 1.2.x)
	~1 := >=1.0.0 <(1+1).0.0 := >=1.0.0 <2.0.0 (Same as 1.x)
	~0.2.3 := >=0.2.3 <0.(2+1).0 := >=0.2.3 <0.3.0
	~0.2 := >=0.2.0 <0.(2+1).0 := >=0.2.0 <0.3.0 (Same as 0.2.x)
	~0 := >=0.0.0 <(0+1).0.0 := >=0.0.0 <1.0.0 (Same as 0.x)
	~1.2.3-beta.2 := >=1.2.3-beta.2 <1.3.0
	
	^1.2.3 := >=1.2.3 <2.0.0
	^0.2.3 := >=0.2.3 <0.3.0
	^0.0.3 := >=0.0.3 <0.0.4

* pm2 -i 8 --name='wentu' start ./www -- production
* npm init 创建package.json
* pm2 reset xxx              reset counter for xxx
* http-server 模块， 可以随时起一个http server 做测试	
* npm list -g --depth=0           查看全局安装的包, 指定查看深度
* process.env.UV_THREADPOOL_SIZE 可以设置nodejs执行事件循环时所使用的线程数
* 内存泄漏分析： http://www.alexkras.com/simple-guide-to-finding-a-javascript-memory-leak-in-node-js/
* node --expose-gc index.js 可以在程序内调用global.gc()
* 查看内存使用情况： process.memoryUsage()v
* 模块加载时实际运行代码：
 (function (exports, require, module, __filename, __dirname) {
	 // 模块代码展开
});

* nodejs 原生debug:
	1. 在程序中设置断点: debugger;
	2. node debug index.js 运行
	3. 进入debug命令行，运行c, 程序将在断点处停止
	4. repl可进入程序执行环境，查看各个变量值（有的对象直接输出会显示undefined,  但是有值的）
* webstorm 有live edit 功能, 使用debug模式运行(打个断点之后live editor才生效？) 
* npm install -g 
* semver 模块可以处理和软件版本相关的事情，chalk模块可以在命令行输出彩色文字
* __dirname, __filename 当前路径名，当前文件名
* ora 模块，命令输出转圈等待
* module.paths可以输出路径列表
* npm config list -l 可以列出所有配置
* npm config set prefix 可以设置global位置
* http.Server.timeout 默认是120s, 两分钟
* npm 默认全局配置文件: [[/usr/etc/npmrc]]

